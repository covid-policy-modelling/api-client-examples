name: API Client Examples-Build, Test & Publish Docker
on:
  push:

jobs:
  publish:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        client:
          - julia-client
          - python-client
          - r-client

    name: publish-${{ matrix.client }}

    steps:
      - name: Set variables
        id: variables
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository }}/${{ matrix.client }}
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix (refs/heads/ or refs/tags/) from version
          # but keep the rest of the ref. Replaces / with - to make the package name valid.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,refs/\(heads\|tags\)/\(.*\),\2,' | tr '/' '-')

          # Strip "refs/tags/v" prefix from tag name
          [[ "${GITHUB_REF}" == "refs/tags/"* ]] && VERSION=$(echo "${GITHUB_REF}" | sed -e 's:^refs/tags/v::')

          # Always tag with git sha or version tag
          echo IMAGE_ID=$IMAGE_ID
          echo "::set-output name=image_id::$IMAGE_ID"
          echo VERSION=$VERSION
          echo "::set-output name=version::$VERSION"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build image
        run: docker-compose build ${{ matrix.client }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push image
        run: |
          IMAGE_ID=${{ steps.variables.outputs.image_id }}
          VERSION=${{ steps.variables.outputs.version }}

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag ${{ matrix.client }} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

      - name: Push image (latest)
        if: ${{ github.ref_name == 'main' }}
        run: |
          IMAGE_ID=${{ steps.variables.outputs.image_id }}
          VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag ${{ matrix.client }} $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
